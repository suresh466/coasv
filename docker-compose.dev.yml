services:
  dev-db:
    container_name: coasv-dev-db
    image: postgres
    volumes:
      - dev-database:/var/lib/postgresql
    networks:
      - dev-network
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${COASV_DB_NAME}
      - POSTGRES_USER=${COASV_DB_USER}
      - POSTGRES_PASSWORD=${COASV_DB_PASS}
      - POSTGRES_PORT=${COASV_DB_PORT}

  web:
    container_name: coasv-dev-web
    build: .
    ports:
      - "8000:8000"
    volumes:
      - staticfiles:/srv/staticfiles:rw
    networks:
      - dev-network
    environment:
      - COASV_SECRET_KEY=${COASV_SECRET_KEY}
      - COASV_DEBUG_VALUE=${COASV_DEBUG_VALUE}
      - COASV_DB_HOST=${COASV_DB_HOST}
      - COASV_DB_NAME=${COASV_DB_NAME}
      - COASV_DB_USER=${COASV_DB_USER}
      - COASV_DB_PASS=${COASV_DB_PASS}
      - COASV_DB_PORT=${COASV_DB_PORT}
      - COASV_ALLOWED_HOSTS=${COASV_ALLOWED_HOSTS}
      - COASV_STATIC_ROOT=${COASV_STATIC_ROOT}
    depends_on:
      - dev-db

  # to test caddy setup in dev
  dev-caddy:
    container_name: coasv-dev-caddy
    image: caddy:alpine
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - "443:443/udp"
    volumes:
      # Mount the same volume as in the web service
      - staticfiles:/srv/staticfiles:ro
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - dev-network
    depends_on:
      - web

volumes:
  dev-database:
  staticfiles:

networks:
  dev-network:
