from django.test import TestCase

from coasc.models import ImpersonalAccount, Split, Transaction

from ledgers.views import generate_rows, generate_table


class GenerateRowsTest(TestCase):
    @classmethod
    def setUpTestData(cls):
        cls.single_ac1 = ImpersonalAccount.objects.create(
                name='single_ac1', code='1', type_ac='AS')
        tx = Transaction.objects.create(description='demo desc')

        Split.objects.create(
                account=cls.single_ac1, type_split='dr',
                amount=100, transaction=tx)
        Split.objects.create(
                account=cls.single_ac1, type_split='cr',
                amount=200, transaction=tx)

    def test_returns_emtpy_list_if_no_splits(self):
        splits = []
        rows = generate_rows(splits)
        self.assertFalse(rows)

    def test_returns_rows_as_expected(self):
        splits = self.single_ac1.split_set.all()
        rows = generate_rows(splits)

        row1 = {'debit': 100.00, 'credit': 0, 'difference': 100.00,
                'description': 'demo desc'}
        row2 = {'debit': 0, 'credit': 200.00, 'difference': -100.00,
                'description': 'demo desc'}
        expected_rows = [row1, row2]

        self.assertEqual(len(rows), 2)
        self.assertEqual(rows, expected_rows)


class GenerateTableTest(TestCase):
    @classmethod
    def setUpTestData(cls):
        cls.single_ac1 = ImpersonalAccount.objects.create(
                name='single_ac1', code='1', type_ac='AS')
        tx = Transaction.objects.create(description='demo desc')

        Split.objects.create(
                account=cls.single_ac1, type_split='dr',
                amount=100, transaction=tx)
        Split.objects.create(
                account=cls.single_ac1, type_split='cr',
                amount=200, transaction=tx)

    def test_returns_table_as_expected(self):
        account = self.single_ac1
        table = generate_table(account)

        self.assertEqual(len(table), 4)
        self.assertEqual(table['code'], '1')
